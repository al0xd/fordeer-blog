// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 9NGHBNkQsbfExpj8Yvxqtb
// Component: bizLmKQlykgG
import * as React from "react"

import { Link, GatsbyLinkProps as LinkProps } from "gatsby"

import * as p from "@plasmicapp/react-web"
import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants,
} from "@plasmicapp/react-web"

import { useScreenVariants } from "./PlasmicGlobalVariant__Screen" // plasmic-import: p9wv0BYsrZXV/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css"
import * as defaultcss from "../plasmic__default_style.module.css" // plasmic-import: global/defaultcss
import * as projectcss from "./plasmic_blank_project.module.css" // plasmic-import: 9NGHBNkQsbfExpj8Yvxqtb/projectcss
import * as sty from "./PlasmicHomepage.module.css" // plasmic-import: bizLmKQlykgG/css

import Liogo1XsvgIcon from "./icons/PlasmicIcon__Liogo1Xsvg" // plasmic-import: c_1pCl59N/icon
import LoupesvgIcon from "./icons/PlasmicIcon__Loupesvg" // plasmic-import: sY_IQ68AQ/icon

export type PlasmicHomepage__VariantMembers = {}

export type PlasmicHomepage__VariantsArgs = {}
type VariantPropType = keyof PlasmicHomepage__VariantsArgs
export const PlasmicHomepage__VariantProps = new Array<VariantPropType>()

export type PlasmicHomepage__ArgsType = {}
type ArgPropType = keyof PlasmicHomepage__ArgsType
export const PlasmicHomepage__ArgProps = new Array<ArgPropType>()

export type PlasmicHomepage__OverridesType = {
  root?: p.Flex<"div">
  home?: p.Flex<"div">
  header?: p.Flex<"div">
  topBar?: p.Flex<"div">
  logo?: p.Flex<"a"> & Partial<LinkProps>
  logoImg?: p.Flex<"svg">
  search?: p.Flex<"div">
  svg?: p.Flex<"svg">
  menu?: p.Flex<"div">
  menuItem?: p.Flex<"a"> & Partial<LinkProps>
  menuItem2?: p.Flex<"a"> & Partial<LinkProps>
  menuItem222?: p.Flex<"a"> & Partial<LinkProps>
  menuItem2222?: p.Flex<"a"> & Partial<LinkProps>
  menuItem2222222?: p.Flex<"a"> & Partial<LinkProps>
  menuItem22222222?: p.Flex<"a"> & Partial<LinkProps>
  featurePost?: p.Flex<"div">
  featurePostImg?: p.Flex<"div">
  _1AiyudnGy73IyPrVNtugCRw1?: p.Flex<"div">
  featurePostTitle?: p.Flex<"div">
  blogGridWrap?: p.Flex<"div">
  blogGrid?: p.Flex<"div">
  frame6?: p.Flex<"div">
  frame2?: p.Flex<"div">
  _0XhYnfCexInyx9VRq1?: p.Flex<"div">
  theDataEngineerSkillPyramid?: p.Flex<"div">
  group2?: p.Flex<"div">
  group3?: p.Flex<"div">
  frame8?: p.Flex<"div">
  screenShot20210417At3411?: p.Flex<"div">
  frame7?: p.Flex<"div">
  frame22?: p.Flex<"div">
  _0XhYnfCexInyx9VRq12?: p.Flex<"div">
  putAnEndToTheConfusionAboutTheseConcepts?: p.Flex<"div">
  group22?: p.Flex<"div">
  group32?: p.Flex<"div">
  frame82?: p.Flex<"div">
  screenShot20210417At34112?: p.Flex<"div">
  frame83?: p.Flex<"div">
  frame23?: p.Flex<"div">
  _0XhYnfCexInyx9VRq13?: p.Flex<"div">
  group23?: p.Flex<"div">
  group33?: p.Flex<"div">
  frame84?: p.Flex<"div">
  screenShot20210417At34113?: p.Flex<"div">
  blogGrid2?: p.Flex<"div">
  frame62?: p.Flex<"div">
  frame24?: p.Flex<"div">
  _0XhYnfCexInyx9VRq14?: p.Flex<"div">
  putAnEndToTheConfusionAboutTheseConcepts2?: p.Flex<"div">
  group24?: p.Flex<"div">
  group34?: p.Flex<"div">
  frame85?: p.Flex<"div">
  screenShot20210417At34114?: p.Flex<"div">
  frame72?: p.Flex<"div">
  frame25?: p.Flex<"div">
  _0XhYnfCexInyx9VRq15?: p.Flex<"div">
  putAnEndToTheConfusionAboutTheseConcepts3?: p.Flex<"div">
  group25?: p.Flex<"div">
  group35?: p.Flex<"div">
  frame86?: p.Flex<"div">
  screenShot20210417At34115?: p.Flex<"div">
  frame87?: p.Flex<"div">
  frame26?: p.Flex<"div">
  _0XhYnfCexInyx9VRq16?: p.Flex<"div">
  putAnEndToTheConfusionAboutTheseConcepts4?: p.Flex<"div">
  group26?: p.Flex<"div">
  group36?: p.Flex<"div">
  frame88?: p.Flex<"div">
  screenShot20210417At34116?: p.Flex<"div">
  blogGrid3?: p.Flex<"div">
  frame63?: p.Flex<"div">
  frame27?: p.Flex<"div">
  _0XhYnfCexInyx9VRq17?: p.Flex<"div">
  putAnEndToTheConfusionAboutTheseConcepts5?: p.Flex<"div">
  group27?: p.Flex<"div">
  group37?: p.Flex<"div">
  frame89?: p.Flex<"div">
  screenShot20210417At34117?: p.Flex<"div">
  frame73?: p.Flex<"div">
  frame28?: p.Flex<"div">
  _0XhYnfCexInyx9VRq18?: p.Flex<"div">
  putAnEndToTheConfusionAboutTheseConcepts6?: p.Flex<"div">
  group28?: p.Flex<"div">
  group38?: p.Flex<"div">
  frame810?: p.Flex<"div">
  screenShot20210417At34118?: p.Flex<"div">
  frame811?: p.Flex<"div">
  frame29?: p.Flex<"div">
  _0XhYnfCexInyx9VRq19?: p.Flex<"div">
  putAnEndToTheConfusionAboutTheseConcepts7?: p.Flex<"div">
  group29?: p.Flex<"div">
  group39?: p.Flex<"div">
  frame812?: p.Flex<"div">
  screenShot20210417At34119?: p.Flex<"div">
}

export interface DefaultHomepageProps {
  className?: string
}

function PlasmicHomepage__RenderFunc(props: {
  variants: PlasmicHomepage__VariantsArgs
  args: PlasmicHomepage__ArgsType
  overrides: PlasmicHomepage__OverridesType
  forNode?: string
}) {
  const { variants, args, overrides, forNode } = props

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariants(),
  })

  return (
    <React.Fragment>
      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={defaultcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            defaultcss.all,
            projectcss.root_reset,
            sty.root
          )}
        >
          <p.Stack
            as={"div"}
            data-plasmic-name={"home"}
            data-plasmic-override={overrides.home}
            hasGap={
              hasVariant(globalVariants, "screen", "mobileOnly") ? true : false
            }
            className={classNames(defaultcss.all, sty.home)}
          >
            <div
              data-plasmic-name={"header"}
              data-plasmic-override={overrides.header}
              className={classNames(defaultcss.all, sty.header)}
            >
              <div
                data-plasmic-name={"topBar"}
                data-plasmic-override={overrides.topBar}
                className={classNames(defaultcss.all, sty.topBar)}
              >
                <p.PlasmicLink
                  data-plasmic-name={"logo"}
                  data-plasmic-override={overrides.logo}
                  className={classNames(defaultcss.all, sty.logo)}
                  component={Link}
                  href={"/" as const}
                  platform={"gatsby"}
                >
                  <Liogo1XsvgIcon
                    data-plasmic-name={"logoImg"}
                    data-plasmic-override={overrides.logoImg}
                    className={classNames(defaultcss.all, sty.logoImg)}
                    role={"img"}
                  />
                </p.PlasmicLink>

                <div
                  data-plasmic-name={"search"}
                  data-plasmic-override={overrides.search}
                  className={classNames(defaultcss.all, sty.search)}
                >
                  <LoupesvgIcon
                    data-plasmic-name={"svg"}
                    data-plasmic-override={overrides.svg}
                    className={classNames(defaultcss.all, sty.svg)}
                    role={"img"}
                  />
                </div>
              </div>

              <p.Stack
                as={"div"}
                data-plasmic-name={"menu"}
                data-plasmic-override={overrides.menu}
                hasGap={true}
                className={classNames(defaultcss.all, sty.menu)}
              >
                <p.PlasmicLink
                  data-plasmic-name={"menuItem"}
                  data-plasmic-override={overrides.menuItem}
                  className={classNames(defaultcss.all, sty.menuItem)}
                  component={Link}
                  href={"https://www.plasmic.app/" as const}
                  platform={"gatsby"}
                >
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.box__gAua,
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? ("Menu Item" as const)
                        : undefined
                    )}
                  >
                    {"HOME"}
                  </div>
                </p.PlasmicLink>

                <p.PlasmicLink
                  data-plasmic-name={"menuItem2"}
                  data-plasmic-override={overrides.menuItem2}
                  className={classNames(defaultcss.all, sty.menuItem2)}
                  component={Link}
                  href={"https://www.plasmic.app/" as const}
                  platform={"gatsby"}
                >
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.box__nwkGp,
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? ("Menu Item" as const)
                        : undefined
                    )}
                  >
                    {"NEW POST"}
                  </div>
                </p.PlasmicLink>

                <p.PlasmicLink
                  data-plasmic-name={"menuItem222"}
                  data-plasmic-override={overrides.menuItem222}
                  className={classNames(defaultcss.all, sty.menuItem222)}
                  component={Link}
                  href={"https://www.plasmic.app/" as const}
                  platform={"gatsby"}
                >
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.box__zpHg4
                    )}
                  >
                    {"DEV"}
                  </div>
                </p.PlasmicLink>

                <p.PlasmicLink
                  data-plasmic-name={"menuItem2222"}
                  data-plasmic-override={overrides.menuItem2222}
                  className={classNames(defaultcss.all, sty.menuItem2222)}
                  component={Link}
                  href={"https://www.plasmic.app/" as const}
                  platform={"gatsby"}
                >
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.box___0PGbB
                    )}
                  >
                    {"UI & UX"}
                  </div>
                </p.PlasmicLink>

                <p.PlasmicLink
                  data-plasmic-name={"menuItem2222222"}
                  data-plasmic-override={overrides.menuItem2222222}
                  className={classNames(defaultcss.all, sty.menuItem2222222)}
                  component={Link}
                  href={"https://www.plasmic.app/" as const}
                  platform={"gatsby"}
                >
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.box__cHsRd
                    )}
                  >
                    {"ABOUT"}
                  </div>
                </p.PlasmicLink>

                {(
                  hasVariant(globalVariants, "screen", "mobileOnly")
                    ? false
                    : false
                ) ? (
                  <p.PlasmicLink
                    data-plasmic-name={"menuItem22222222"}
                    data-plasmic-override={overrides.menuItem22222222}
                    className={classNames(defaultcss.all, sty.menuItem22222222)}
                    component={Link}
                    href={"https://www.plasmic.app/" as const}
                    platform={"gatsby"}
                  >
                    <div
                      className={classNames(
                        defaultcss.all,
                        defaultcss.__wab_text,
                        sty.box__mq9A8
                      )}
                    >
                      {"ABOUT"}
                    </div>
                  </p.PlasmicLink>
                ) : null}
              </p.Stack>
            </div>

            {(
              hasVariant(globalVariants, "screen", "mobileOnly") ? true : true
            ) ? (
              <p.Stack
                as={"div"}
                data-plasmic-name={"featurePost"}
                data-plasmic-override={overrides.featurePost}
                hasGap={
                  hasVariant(globalVariants, "screen", "mobileOnly")
                    ? true
                    : false
                }
                className={classNames(defaultcss.all, sty.featurePost)}
              >
                <div
                  data-plasmic-name={"featurePostImg"}
                  data-plasmic-override={overrides.featurePostImg}
                  className={classNames(defaultcss.all, sty.featurePostImg)}
                >
                  <div
                    data-plasmic-name={"_1AiyudnGy73IyPrVNtugCRw1"}
                    data-plasmic-override={overrides._1AiyudnGy73IyPrVNtugCRw1}
                    className={classNames(
                      defaultcss.all,
                      sty._1AiyudnGy73IyPrVNtugCRw1
                    )}
                  />
                </div>

                <p.Stack
                  as={"div"}
                  data-plasmic-name={"featurePostTitle"}
                  data-plasmic-override={overrides.featurePostTitle}
                  hasGap={
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? true
                      : false
                  }
                  className={classNames(defaultcss.all, sty.featurePostTitle)}
                >
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.box__efk5X
                    )}
                  >
                    {"19 Realistic Habits To Improve Software Development"}
                  </div>

                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.box__qtQmh
                    )}
                  >
                    {"Simple habits to be applied from minute zero"}
                  </div>
                </p.Stack>
              </p.Stack>
            ) : null}

            <p.Stack
              as={"div"}
              data-plasmic-name={"blogGridWrap"}
              data-plasmic-override={overrides.blogGridWrap}
              hasGap={true}
              className={classNames(defaultcss.all, sty.blogGridWrap)}
            >
              <p.Stack
                as={"div"}
                data-plasmic-name={"blogGrid"}
                data-plasmic-override={overrides.blogGrid}
                hasGap={true}
                className={classNames(defaultcss.all, sty.blogGrid)}
              >
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"frame6"}
                  data-plasmic-override={overrides.frame6}
                  hasGap={true}
                  className={classNames(defaultcss.all, sty.frame6)}
                >
                  <div
                    data-plasmic-name={"frame2"}
                    data-plasmic-override={overrides.frame2}
                    className={classNames(defaultcss.all, sty.frame2)}
                  >
                    <div
                      data-plasmic-name={"_0XhYnfCexInyx9VRq1"}
                      data-plasmic-override={overrides._0XhYnfCexInyx9VRq1}
                      className={classNames(
                        defaultcss.all,
                        sty._0XhYnfCexInyx9VRq1
                      )}
                    />
                  </div>

                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.box___5Rfa9
                    )}
                  >
                    {"What Skills Does a Data Engineer Need?"}
                  </div>

                  <div
                    data-plasmic-name={"theDataEngineerSkillPyramid"}
                    data-plasmic-override={
                      overrides.theDataEngineerSkillPyramid
                    }
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.theDataEngineerSkillPyramid
                    )}
                  >
                    {hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "The data enginer skill pyramid"
                      : "The data engineer skill pyramid\n"}
                  </div>

                  <div
                    data-plasmic-name={"group2"}
                    data-plasmic-override={overrides.group2}
                    className={classNames(defaultcss.all, sty.group2)}
                  >
                    <div
                      data-plasmic-name={"group3"}
                      data-plasmic-override={overrides.group3}
                      className={classNames(defaultcss.all, sty.group3)}
                    >
                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.box__gRlLq
                        )}
                      >
                        {"17 Apr, 2021"}
                      </div>

                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.box__i71J
                        )}
                      >
                        {"Hung Dinh"}
                      </div>
                    </div>

                    <div
                      data-plasmic-name={"frame8"}
                      data-plasmic-override={overrides.frame8}
                      className={classNames(defaultcss.all, sty.frame8)}
                    >
                      <div
                        data-plasmic-name={"screenShot20210417At3411"}
                        data-plasmic-override={
                          overrides.screenShot20210417At3411
                        }
                        className={classNames(
                          defaultcss.all,
                          sty.screenShot20210417At3411
                        )}
                      />
                    </div>
                  </div>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  data-plasmic-name={"frame7"}
                  data-plasmic-override={overrides.frame7}
                  hasGap={true}
                  className={classNames(defaultcss.all, sty.frame7)}
                >
                  <div
                    data-plasmic-name={"frame22"}
                    data-plasmic-override={overrides.frame22}
                    className={classNames(defaultcss.all, sty.frame22)}
                  >
                    <div
                      data-plasmic-name={"_0XhYnfCexInyx9VRq12"}
                      data-plasmic-override={overrides._0XhYnfCexInyx9VRq12}
                      className={classNames(
                        defaultcss.all,
                        sty._0XhYnfCexInyx9VRq12
                      )}
                    />
                  </div>

                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.box__fKo
                    )}
                  >
                    {
                      "Type Systems in Programming Languages: Static vs. Dynamic and Strong Vs. Weak"
                    }
                  </div>

                  <div
                    data-plasmic-name={
                      "putAnEndToTheConfusionAboutTheseConcepts"
                    }
                    data-plasmic-override={
                      overrides.putAnEndToTheConfusionAboutTheseConcepts
                    }
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.putAnEndToTheConfusionAboutTheseConcepts
                    )}
                  >
                    {"Put an end to the confusion about these concepts\n"}
                  </div>

                  <div
                    data-plasmic-name={"group22"}
                    data-plasmic-override={overrides.group22}
                    className={classNames(defaultcss.all, sty.group22)}
                  >
                    <div
                      data-plasmic-name={"group32"}
                      data-plasmic-override={overrides.group32}
                      className={classNames(defaultcss.all, sty.group32)}
                    >
                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.box__kFThf
                        )}
                      >
                        {"17 Apr, 2021"}
                      </div>

                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.box__vH1Um
                        )}
                      >
                        {"Hung Dinh"}
                      </div>
                    </div>

                    <div
                      data-plasmic-name={"frame82"}
                      data-plasmic-override={overrides.frame82}
                      className={classNames(defaultcss.all, sty.frame82)}
                    >
                      <div
                        data-plasmic-name={"screenShot20210417At34112"}
                        data-plasmic-override={
                          overrides.screenShot20210417At34112
                        }
                        className={classNames(
                          defaultcss.all,
                          sty.screenShot20210417At34112
                        )}
                      />
                    </div>
                  </div>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  data-plasmic-name={"frame83"}
                  data-plasmic-override={overrides.frame83}
                  hasGap={true}
                  className={classNames(defaultcss.all, sty.frame83)}
                >
                  <div
                    data-plasmic-name={"frame23"}
                    data-plasmic-override={overrides.frame23}
                    className={classNames(defaultcss.all, sty.frame23)}
                  >
                    <div
                      data-plasmic-name={"_0XhYnfCexInyx9VRq13"}
                      data-plasmic-override={overrides._0XhYnfCexInyx9VRq13}
                      className={classNames(
                        defaultcss.all,
                        sty._0XhYnfCexInyx9VRq13
                      )}
                    />
                  </div>

                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.box__nlgyH
                    )}
                  >
                    {
                      "12 Ways To Reduce Carbon Footprints as a Full Stack Developer"
                    }
                  </div>

                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.box___1SMsd
                    )}
                  >
                    {"Minimize CO2 emissions"}
                  </div>

                  <div
                    data-plasmic-name={"group23"}
                    data-plasmic-override={overrides.group23}
                    className={classNames(defaultcss.all, sty.group23)}
                  >
                    <div
                      data-plasmic-name={"group33"}
                      data-plasmic-override={overrides.group33}
                      className={classNames(defaultcss.all, sty.group33)}
                    >
                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.box__jnUq6
                        )}
                      >
                        {"17 Apr, 2021"}
                      </div>

                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.box__flFyf
                        )}
                      >
                        {"Hung Dinh"}
                      </div>
                    </div>

                    <div
                      data-plasmic-name={"frame84"}
                      data-plasmic-override={overrides.frame84}
                      className={classNames(defaultcss.all, sty.frame84)}
                    >
                      <div
                        data-plasmic-name={"screenShot20210417At34113"}
                        data-plasmic-override={
                          overrides.screenShot20210417At34113
                        }
                        className={classNames(
                          defaultcss.all,
                          sty.screenShot20210417At34113
                        )}
                      />
                    </div>
                  </div>
                </p.Stack>
              </p.Stack>

              <p.Stack
                as={"div"}
                data-plasmic-name={"blogGrid2"}
                data-plasmic-override={overrides.blogGrid2}
                hasGap={true}
                className={classNames(defaultcss.all, sty.blogGrid2)}
              >
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"frame62"}
                  data-plasmic-override={overrides.frame62}
                  hasGap={true}
                  className={classNames(defaultcss.all, sty.frame62)}
                >
                  <div
                    data-plasmic-name={"frame24"}
                    data-plasmic-override={overrides.frame24}
                    className={classNames(defaultcss.all, sty.frame24)}
                  >
                    <div
                      data-plasmic-name={"_0XhYnfCexInyx9VRq14"}
                      data-plasmic-override={overrides._0XhYnfCexInyx9VRq14}
                      className={classNames(
                        defaultcss.all,
                        sty._0XhYnfCexInyx9VRq14
                      )}
                    />
                  </div>

                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.box__a7Wy8
                    )}
                  >
                    {
                      "Type Systems in Programming Languages: Static vs. Dynamic and Strong Vs. Weak"
                    }
                  </div>

                  <div
                    data-plasmic-name={
                      "putAnEndToTheConfusionAboutTheseConcepts2"
                    }
                    data-plasmic-override={
                      overrides.putAnEndToTheConfusionAboutTheseConcepts2
                    }
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.putAnEndToTheConfusionAboutTheseConcepts2
                    )}
                  >
                    {"Put an end to the confusion about these concepts\n"}
                  </div>

                  <div
                    data-plasmic-name={"group24"}
                    data-plasmic-override={overrides.group24}
                    className={classNames(defaultcss.all, sty.group24)}
                  >
                    <div
                      data-plasmic-name={"group34"}
                      data-plasmic-override={overrides.group34}
                      className={classNames(defaultcss.all, sty.group34)}
                    >
                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.box__vXXyu
                        )}
                      >
                        {"17 Apr, 2021"}
                      </div>

                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.box__yM8Mo
                        )}
                      >
                        {"Hung Dinh"}
                      </div>
                    </div>

                    <div
                      data-plasmic-name={"frame85"}
                      data-plasmic-override={overrides.frame85}
                      className={classNames(defaultcss.all, sty.frame85)}
                    >
                      <div
                        data-plasmic-name={"screenShot20210417At34114"}
                        data-plasmic-override={
                          overrides.screenShot20210417At34114
                        }
                        className={classNames(
                          defaultcss.all,
                          sty.screenShot20210417At34114
                        )}
                      />
                    </div>
                  </div>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  data-plasmic-name={"frame72"}
                  data-plasmic-override={overrides.frame72}
                  hasGap={true}
                  className={classNames(defaultcss.all, sty.frame72)}
                >
                  <div
                    data-plasmic-name={"frame25"}
                    data-plasmic-override={overrides.frame25}
                    className={classNames(defaultcss.all, sty.frame25)}
                  >
                    <div
                      data-plasmic-name={"_0XhYnfCexInyx9VRq15"}
                      data-plasmic-override={overrides._0XhYnfCexInyx9VRq15}
                      className={classNames(
                        defaultcss.all,
                        sty._0XhYnfCexInyx9VRq15
                      )}
                    />
                  </div>

                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.box__x5Z6A
                    )}
                  >
                    {
                      "Type Systems in Programming Languages: Static vs. Dynamic and Strong Vs. Weak"
                    }
                  </div>

                  <div
                    data-plasmic-name={
                      "putAnEndToTheConfusionAboutTheseConcepts3"
                    }
                    data-plasmic-override={
                      overrides.putAnEndToTheConfusionAboutTheseConcepts3
                    }
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.putAnEndToTheConfusionAboutTheseConcepts3
                    )}
                  >
                    {"Put an end to the confusion about these concepts\n"}
                  </div>

                  <div
                    data-plasmic-name={"group25"}
                    data-plasmic-override={overrides.group25}
                    className={classNames(defaultcss.all, sty.group25)}
                  >
                    <div
                      data-plasmic-name={"group35"}
                      data-plasmic-override={overrides.group35}
                      className={classNames(defaultcss.all, sty.group35)}
                    >
                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.box__ak0Ka
                        )}
                      >
                        {"17 Apr, 2021"}
                      </div>

                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.box__aWort
                        )}
                      >
                        {"Hung Dinh"}
                      </div>
                    </div>

                    <div
                      data-plasmic-name={"frame86"}
                      data-plasmic-override={overrides.frame86}
                      className={classNames(defaultcss.all, sty.frame86)}
                    >
                      <div
                        data-plasmic-name={"screenShot20210417At34115"}
                        data-plasmic-override={
                          overrides.screenShot20210417At34115
                        }
                        className={classNames(
                          defaultcss.all,
                          sty.screenShot20210417At34115
                        )}
                      />
                    </div>
                  </div>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  data-plasmic-name={"frame87"}
                  data-plasmic-override={overrides.frame87}
                  hasGap={true}
                  className={classNames(defaultcss.all, sty.frame87)}
                >
                  <div
                    data-plasmic-name={"frame26"}
                    data-plasmic-override={overrides.frame26}
                    className={classNames(defaultcss.all, sty.frame26)}
                  >
                    <div
                      data-plasmic-name={"_0XhYnfCexInyx9VRq16"}
                      data-plasmic-override={overrides._0XhYnfCexInyx9VRq16}
                      className={classNames(
                        defaultcss.all,
                        sty._0XhYnfCexInyx9VRq16
                      )}
                    />
                  </div>

                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.box__k4GOs
                    )}
                  >
                    {
                      "Type Systems in Programming Languages: Static vs. Dynamic and Strong Vs. Weak"
                    }
                  </div>

                  <div
                    data-plasmic-name={
                      "putAnEndToTheConfusionAboutTheseConcepts4"
                    }
                    data-plasmic-override={
                      overrides.putAnEndToTheConfusionAboutTheseConcepts4
                    }
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.putAnEndToTheConfusionAboutTheseConcepts4
                    )}
                  >
                    {"Put an end to the confusion about these concepts\n"}
                  </div>

                  <div
                    data-plasmic-name={"group26"}
                    data-plasmic-override={overrides.group26}
                    className={classNames(defaultcss.all, sty.group26)}
                  >
                    <div
                      data-plasmic-name={"group36"}
                      data-plasmic-override={overrides.group36}
                      className={classNames(defaultcss.all, sty.group36)}
                    >
                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.box___0X1RA
                        )}
                      >
                        {"17 Apr, 2021"}
                      </div>

                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.box__uiSaT
                        )}
                      >
                        {"Hung Dinh"}
                      </div>
                    </div>

                    <div
                      data-plasmic-name={"frame88"}
                      data-plasmic-override={overrides.frame88}
                      className={classNames(defaultcss.all, sty.frame88)}
                    >
                      <div
                        data-plasmic-name={"screenShot20210417At34116"}
                        data-plasmic-override={
                          overrides.screenShot20210417At34116
                        }
                        className={classNames(
                          defaultcss.all,
                          sty.screenShot20210417At34116
                        )}
                      />
                    </div>
                  </div>
                </p.Stack>
              </p.Stack>

              {(
                hasVariant(globalVariants, "screen", "mobileOnly")
                  ? false
                  : true
              ) ? (
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"blogGrid3"}
                  data-plasmic-override={overrides.blogGrid3}
                  hasGap={true}
                  className={classNames(defaultcss.all, sty.blogGrid3)}
                >
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"frame63"}
                    data-plasmic-override={overrides.frame63}
                    hasGap={true}
                    className={classNames(defaultcss.all, sty.frame63)}
                  >
                    <div
                      data-plasmic-name={"frame27"}
                      data-plasmic-override={overrides.frame27}
                      className={classNames(defaultcss.all, sty.frame27)}
                    >
                      <div
                        data-plasmic-name={"_0XhYnfCexInyx9VRq17"}
                        data-plasmic-override={overrides._0XhYnfCexInyx9VRq17}
                        className={classNames(
                          defaultcss.all,
                          sty._0XhYnfCexInyx9VRq17
                        )}
                      />
                    </div>

                    <div
                      className={classNames(
                        defaultcss.all,
                        defaultcss.__wab_text,
                        sty.box__lb5W1
                      )}
                    >
                      {
                        "Type Systems in Programming Languages: Static vs. Dynamic and Strong Vs. Weak"
                      }
                    </div>

                    <div
                      data-plasmic-name={
                        "putAnEndToTheConfusionAboutTheseConcepts5"
                      }
                      data-plasmic-override={
                        overrides.putAnEndToTheConfusionAboutTheseConcepts5
                      }
                      className={classNames(
                        defaultcss.all,
                        defaultcss.__wab_text,
                        sty.putAnEndToTheConfusionAboutTheseConcepts5
                      )}
                    >
                      {"Put an end to the confusion about these concepts\n"}
                    </div>

                    <div
                      data-plasmic-name={"group27"}
                      data-plasmic-override={overrides.group27}
                      className={classNames(defaultcss.all, sty.group27)}
                    >
                      <div
                        data-plasmic-name={"group37"}
                        data-plasmic-override={overrides.group37}
                        className={classNames(defaultcss.all, sty.group37)}
                      >
                        <div
                          className={classNames(
                            defaultcss.all,
                            defaultcss.__wab_text,
                            sty.box__wYeL
                          )}
                        >
                          {"17 Apr, 2021"}
                        </div>

                        <div
                          className={classNames(
                            defaultcss.all,
                            defaultcss.__wab_text,
                            sty.box__ny3HC
                          )}
                        >
                          {"Hung Dinh"}
                        </div>
                      </div>

                      <div
                        data-plasmic-name={"frame89"}
                        data-plasmic-override={overrides.frame89}
                        className={classNames(defaultcss.all, sty.frame89)}
                      >
                        <div
                          data-plasmic-name={"screenShot20210417At34117"}
                          data-plasmic-override={
                            overrides.screenShot20210417At34117
                          }
                          className={classNames(
                            defaultcss.all,
                            sty.screenShot20210417At34117
                          )}
                        />
                      </div>
                    </div>
                  </p.Stack>

                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"frame73"}
                    data-plasmic-override={overrides.frame73}
                    hasGap={true}
                    className={classNames(defaultcss.all, sty.frame73)}
                  >
                    <div
                      data-plasmic-name={"frame28"}
                      data-plasmic-override={overrides.frame28}
                      className={classNames(defaultcss.all, sty.frame28)}
                    >
                      <div
                        data-plasmic-name={"_0XhYnfCexInyx9VRq18"}
                        data-plasmic-override={overrides._0XhYnfCexInyx9VRq18}
                        className={classNames(
                          defaultcss.all,
                          sty._0XhYnfCexInyx9VRq18
                        )}
                      />
                    </div>

                    <div
                      className={classNames(
                        defaultcss.all,
                        defaultcss.__wab_text,
                        sty.box___0CMnA
                      )}
                    >
                      {
                        "Type Systems in Programming Languages: Static vs. Dynamic and Strong Vs. Weak"
                      }
                    </div>

                    <div
                      data-plasmic-name={
                        "putAnEndToTheConfusionAboutTheseConcepts6"
                      }
                      data-plasmic-override={
                        overrides.putAnEndToTheConfusionAboutTheseConcepts6
                      }
                      className={classNames(
                        defaultcss.all,
                        defaultcss.__wab_text,
                        sty.putAnEndToTheConfusionAboutTheseConcepts6
                      )}
                    >
                      {"Put an end to the confusion about these concepts\n"}
                    </div>

                    <div
                      data-plasmic-name={"group28"}
                      data-plasmic-override={overrides.group28}
                      className={classNames(defaultcss.all, sty.group28)}
                    >
                      <div
                        data-plasmic-name={"group38"}
                        data-plasmic-override={overrides.group38}
                        className={classNames(defaultcss.all, sty.group38)}
                      >
                        <div
                          className={classNames(
                            defaultcss.all,
                            defaultcss.__wab_text,
                            sty.box___3PpTo
                          )}
                        >
                          {"17 Apr, 2021"}
                        </div>

                        <div
                          className={classNames(
                            defaultcss.all,
                            defaultcss.__wab_text,
                            sty.box__uAqCa
                          )}
                        >
                          {"Hung Dinh"}
                        </div>
                      </div>

                      <div
                        data-plasmic-name={"frame810"}
                        data-plasmic-override={overrides.frame810}
                        className={classNames(defaultcss.all, sty.frame810)}
                      >
                        <div
                          data-plasmic-name={"screenShot20210417At34118"}
                          data-plasmic-override={
                            overrides.screenShot20210417At34118
                          }
                          className={classNames(
                            defaultcss.all,
                            sty.screenShot20210417At34118
                          )}
                        />
                      </div>
                    </div>
                  </p.Stack>

                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"frame811"}
                    data-plasmic-override={overrides.frame811}
                    hasGap={true}
                    className={classNames(defaultcss.all, sty.frame811)}
                  >
                    <div
                      data-plasmic-name={"frame29"}
                      data-plasmic-override={overrides.frame29}
                      className={classNames(defaultcss.all, sty.frame29)}
                    >
                      <div
                        data-plasmic-name={"_0XhYnfCexInyx9VRq19"}
                        data-plasmic-override={overrides._0XhYnfCexInyx9VRq19}
                        className={classNames(
                          defaultcss.all,
                          sty._0XhYnfCexInyx9VRq19
                        )}
                      />
                    </div>

                    <div
                      className={classNames(
                        defaultcss.all,
                        defaultcss.__wab_text,
                        sty.box__uEf8
                      )}
                    >
                      {
                        "Type Systems in Programming Languages: Static vs. Dynamic and Strong Vs. Weak"
                      }
                    </div>

                    <div
                      data-plasmic-name={
                        "putAnEndToTheConfusionAboutTheseConcepts7"
                      }
                      data-plasmic-override={
                        overrides.putAnEndToTheConfusionAboutTheseConcepts7
                      }
                      className={classNames(
                        defaultcss.all,
                        defaultcss.__wab_text,
                        sty.putAnEndToTheConfusionAboutTheseConcepts7
                      )}
                    >
                      {"Put an end to the confusion about these concepts\n"}
                    </div>

                    <div
                      data-plasmic-name={"group29"}
                      data-plasmic-override={overrides.group29}
                      className={classNames(defaultcss.all, sty.group29)}
                    >
                      <div
                        data-plasmic-name={"group39"}
                        data-plasmic-override={overrides.group39}
                        className={classNames(defaultcss.all, sty.group39)}
                      >
                        <div
                          className={classNames(
                            defaultcss.all,
                            defaultcss.__wab_text,
                            sty.box__bp58J
                          )}
                        >
                          {"17 Apr, 2021"}
                        </div>

                        <div
                          className={classNames(
                            defaultcss.all,
                            defaultcss.__wab_text,
                            sty.box___4NpKj
                          )}
                        >
                          {"Hung Dinh"}
                        </div>
                      </div>

                      <div
                        data-plasmic-name={"frame812"}
                        data-plasmic-override={overrides.frame812}
                        className={classNames(defaultcss.all, sty.frame812)}
                      >
                        <div
                          data-plasmic-name={"screenShot20210417At34119"}
                          data-plasmic-override={
                            overrides.screenShot20210417At34119
                          }
                          className={classNames(
                            defaultcss.all,
                            sty.screenShot20210417At34119
                          )}
                        />
                      </div>
                    </div>
                  </p.Stack>
                </p.Stack>
              ) : null}
            </p.Stack>
          </p.Stack>
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null
}

const PlasmicDescendants = {
  root: [
    "root",
    "home",
    "header",
    "topBar",
    "logo",
    "logoImg",
    "search",
    "svg",
    "menu",
    "menuItem",
    "menuItem2",
    "menuItem222",
    "menuItem2222",
    "menuItem2222222",
    "menuItem22222222",
    "featurePost",
    "featurePostImg",
    "_1AiyudnGy73IyPrVNtugCRw1",
    "featurePostTitle",
    "blogGridWrap",
    "blogGrid",
    "frame6",
    "frame2",
    "_0XhYnfCexInyx9VRq1",
    "theDataEngineerSkillPyramid",
    "group2",
    "group3",
    "frame8",
    "screenShot20210417At3411",
    "frame7",
    "frame22",
    "_0XhYnfCexInyx9VRq12",
    "putAnEndToTheConfusionAboutTheseConcepts",
    "group22",
    "group32",
    "frame82",
    "screenShot20210417At34112",
    "frame83",
    "frame23",
    "_0XhYnfCexInyx9VRq13",
    "group23",
    "group33",
    "frame84",
    "screenShot20210417At34113",
    "blogGrid2",
    "frame62",
    "frame24",
    "_0XhYnfCexInyx9VRq14",
    "putAnEndToTheConfusionAboutTheseConcepts2",
    "group24",
    "group34",
    "frame85",
    "screenShot20210417At34114",
    "frame72",
    "frame25",
    "_0XhYnfCexInyx9VRq15",
    "putAnEndToTheConfusionAboutTheseConcepts3",
    "group25",
    "group35",
    "frame86",
    "screenShot20210417At34115",
    "frame87",
    "frame26",
    "_0XhYnfCexInyx9VRq16",
    "putAnEndToTheConfusionAboutTheseConcepts4",
    "group26",
    "group36",
    "frame88",
    "screenShot20210417At34116",
    "blogGrid3",
    "frame63",
    "frame27",
    "_0XhYnfCexInyx9VRq17",
    "putAnEndToTheConfusionAboutTheseConcepts5",
    "group27",
    "group37",
    "frame89",
    "screenShot20210417At34117",
    "frame73",
    "frame28",
    "_0XhYnfCexInyx9VRq18",
    "putAnEndToTheConfusionAboutTheseConcepts6",
    "group28",
    "group38",
    "frame810",
    "screenShot20210417At34118",
    "frame811",
    "frame29",
    "_0XhYnfCexInyx9VRq19",
    "putAnEndToTheConfusionAboutTheseConcepts7",
    "group29",
    "group39",
    "frame812",
    "screenShot20210417At34119",
  ],
  home: [
    "home",
    "header",
    "topBar",
    "logo",
    "logoImg",
    "search",
    "svg",
    "menu",
    "menuItem",
    "menuItem2",
    "menuItem222",
    "menuItem2222",
    "menuItem2222222",
    "menuItem22222222",
    "featurePost",
    "featurePostImg",
    "_1AiyudnGy73IyPrVNtugCRw1",
    "featurePostTitle",
    "blogGridWrap",
    "blogGrid",
    "frame6",
    "frame2",
    "_0XhYnfCexInyx9VRq1",
    "theDataEngineerSkillPyramid",
    "group2",
    "group3",
    "frame8",
    "screenShot20210417At3411",
    "frame7",
    "frame22",
    "_0XhYnfCexInyx9VRq12",
    "putAnEndToTheConfusionAboutTheseConcepts",
    "group22",
    "group32",
    "frame82",
    "screenShot20210417At34112",
    "frame83",
    "frame23",
    "_0XhYnfCexInyx9VRq13",
    "group23",
    "group33",
    "frame84",
    "screenShot20210417At34113",
    "blogGrid2",
    "frame62",
    "frame24",
    "_0XhYnfCexInyx9VRq14",
    "putAnEndToTheConfusionAboutTheseConcepts2",
    "group24",
    "group34",
    "frame85",
    "screenShot20210417At34114",
    "frame72",
    "frame25",
    "_0XhYnfCexInyx9VRq15",
    "putAnEndToTheConfusionAboutTheseConcepts3",
    "group25",
    "group35",
    "frame86",
    "screenShot20210417At34115",
    "frame87",
    "frame26",
    "_0XhYnfCexInyx9VRq16",
    "putAnEndToTheConfusionAboutTheseConcepts4",
    "group26",
    "group36",
    "frame88",
    "screenShot20210417At34116",
    "blogGrid3",
    "frame63",
    "frame27",
    "_0XhYnfCexInyx9VRq17",
    "putAnEndToTheConfusionAboutTheseConcepts5",
    "group27",
    "group37",
    "frame89",
    "screenShot20210417At34117",
    "frame73",
    "frame28",
    "_0XhYnfCexInyx9VRq18",
    "putAnEndToTheConfusionAboutTheseConcepts6",
    "group28",
    "group38",
    "frame810",
    "screenShot20210417At34118",
    "frame811",
    "frame29",
    "_0XhYnfCexInyx9VRq19",
    "putAnEndToTheConfusionAboutTheseConcepts7",
    "group29",
    "group39",
    "frame812",
    "screenShot20210417At34119",
  ],
  header: [
    "header",
    "topBar",
    "logo",
    "logoImg",
    "search",
    "svg",
    "menu",
    "menuItem",
    "menuItem2",
    "menuItem222",
    "menuItem2222",
    "menuItem2222222",
    "menuItem22222222",
  ],
  topBar: ["topBar", "logo", "logoImg", "search", "svg"],
  logo: ["logo", "logoImg"],
  logoImg: ["logoImg"],
  search: ["search", "svg"],
  svg: ["svg"],
  menu: [
    "menu",
    "menuItem",
    "menuItem2",
    "menuItem222",
    "menuItem2222",
    "menuItem2222222",
    "menuItem22222222",
  ],
  menuItem: ["menuItem"],
  menuItem2: ["menuItem2"],
  menuItem222: ["menuItem222"],
  menuItem2222: ["menuItem2222"],
  menuItem2222222: ["menuItem2222222"],
  menuItem22222222: ["menuItem22222222"],
  featurePost: [
    "featurePost",
    "featurePostImg",
    "_1AiyudnGy73IyPrVNtugCRw1",
    "featurePostTitle",
  ],
  featurePostImg: ["featurePostImg", "_1AiyudnGy73IyPrVNtugCRw1"],
  _1AiyudnGy73IyPrVNtugCRw1: ["_1AiyudnGy73IyPrVNtugCRw1"],
  featurePostTitle: ["featurePostTitle"],
  blogGridWrap: [
    "blogGridWrap",
    "blogGrid",
    "frame6",
    "frame2",
    "_0XhYnfCexInyx9VRq1",
    "theDataEngineerSkillPyramid",
    "group2",
    "group3",
    "frame8",
    "screenShot20210417At3411",
    "frame7",
    "frame22",
    "_0XhYnfCexInyx9VRq12",
    "putAnEndToTheConfusionAboutTheseConcepts",
    "group22",
    "group32",
    "frame82",
    "screenShot20210417At34112",
    "frame83",
    "frame23",
    "_0XhYnfCexInyx9VRq13",
    "group23",
    "group33",
    "frame84",
    "screenShot20210417At34113",
    "blogGrid2",
    "frame62",
    "frame24",
    "_0XhYnfCexInyx9VRq14",
    "putAnEndToTheConfusionAboutTheseConcepts2",
    "group24",
    "group34",
    "frame85",
    "screenShot20210417At34114",
    "frame72",
    "frame25",
    "_0XhYnfCexInyx9VRq15",
    "putAnEndToTheConfusionAboutTheseConcepts3",
    "group25",
    "group35",
    "frame86",
    "screenShot20210417At34115",
    "frame87",
    "frame26",
    "_0XhYnfCexInyx9VRq16",
    "putAnEndToTheConfusionAboutTheseConcepts4",
    "group26",
    "group36",
    "frame88",
    "screenShot20210417At34116",
    "blogGrid3",
    "frame63",
    "frame27",
    "_0XhYnfCexInyx9VRq17",
    "putAnEndToTheConfusionAboutTheseConcepts5",
    "group27",
    "group37",
    "frame89",
    "screenShot20210417At34117",
    "frame73",
    "frame28",
    "_0XhYnfCexInyx9VRq18",
    "putAnEndToTheConfusionAboutTheseConcepts6",
    "group28",
    "group38",
    "frame810",
    "screenShot20210417At34118",
    "frame811",
    "frame29",
    "_0XhYnfCexInyx9VRq19",
    "putAnEndToTheConfusionAboutTheseConcepts7",
    "group29",
    "group39",
    "frame812",
    "screenShot20210417At34119",
  ],
  blogGrid: [
    "blogGrid",
    "frame6",
    "frame2",
    "_0XhYnfCexInyx9VRq1",
    "theDataEngineerSkillPyramid",
    "group2",
    "group3",
    "frame8",
    "screenShot20210417At3411",
    "frame7",
    "frame22",
    "_0XhYnfCexInyx9VRq12",
    "putAnEndToTheConfusionAboutTheseConcepts",
    "group22",
    "group32",
    "frame82",
    "screenShot20210417At34112",
    "frame83",
    "frame23",
    "_0XhYnfCexInyx9VRq13",
    "group23",
    "group33",
    "frame84",
    "screenShot20210417At34113",
  ],
  frame6: [
    "frame6",
    "frame2",
    "_0XhYnfCexInyx9VRq1",
    "theDataEngineerSkillPyramid",
    "group2",
    "group3",
    "frame8",
    "screenShot20210417At3411",
  ],
  frame2: ["frame2", "_0XhYnfCexInyx9VRq1"],
  _0XhYnfCexInyx9VRq1: ["_0XhYnfCexInyx9VRq1"],
  theDataEngineerSkillPyramid: ["theDataEngineerSkillPyramid"],
  group2: ["group2", "group3", "frame8", "screenShot20210417At3411"],
  group3: ["group3"],
  frame8: ["frame8", "screenShot20210417At3411"],
  screenShot20210417At3411: ["screenShot20210417At3411"],
  frame7: [
    "frame7",
    "frame22",
    "_0XhYnfCexInyx9VRq12",
    "putAnEndToTheConfusionAboutTheseConcepts",
    "group22",
    "group32",
    "frame82",
    "screenShot20210417At34112",
  ],
  frame22: ["frame22", "_0XhYnfCexInyx9VRq12"],
  _0XhYnfCexInyx9VRq12: ["_0XhYnfCexInyx9VRq12"],
  putAnEndToTheConfusionAboutTheseConcepts: [
    "putAnEndToTheConfusionAboutTheseConcepts",
  ],
  group22: ["group22", "group32", "frame82", "screenShot20210417At34112"],
  group32: ["group32"],
  frame82: ["frame82", "screenShot20210417At34112"],
  screenShot20210417At34112: ["screenShot20210417At34112"],
  frame83: [
    "frame83",
    "frame23",
    "_0XhYnfCexInyx9VRq13",
    "group23",
    "group33",
    "frame84",
    "screenShot20210417At34113",
  ],
  frame23: ["frame23", "_0XhYnfCexInyx9VRq13"],
  _0XhYnfCexInyx9VRq13: ["_0XhYnfCexInyx9VRq13"],
  group23: ["group23", "group33", "frame84", "screenShot20210417At34113"],
  group33: ["group33"],
  frame84: ["frame84", "screenShot20210417At34113"],
  screenShot20210417At34113: ["screenShot20210417At34113"],
  blogGrid2: [
    "blogGrid2",
    "frame62",
    "frame24",
    "_0XhYnfCexInyx9VRq14",
    "putAnEndToTheConfusionAboutTheseConcepts2",
    "group24",
    "group34",
    "frame85",
    "screenShot20210417At34114",
    "frame72",
    "frame25",
    "_0XhYnfCexInyx9VRq15",
    "putAnEndToTheConfusionAboutTheseConcepts3",
    "group25",
    "group35",
    "frame86",
    "screenShot20210417At34115",
    "frame87",
    "frame26",
    "_0XhYnfCexInyx9VRq16",
    "putAnEndToTheConfusionAboutTheseConcepts4",
    "group26",
    "group36",
    "frame88",
    "screenShot20210417At34116",
  ],
  frame62: [
    "frame62",
    "frame24",
    "_0XhYnfCexInyx9VRq14",
    "putAnEndToTheConfusionAboutTheseConcepts2",
    "group24",
    "group34",
    "frame85",
    "screenShot20210417At34114",
  ],
  frame24: ["frame24", "_0XhYnfCexInyx9VRq14"],
  _0XhYnfCexInyx9VRq14: ["_0XhYnfCexInyx9VRq14"],
  putAnEndToTheConfusionAboutTheseConcepts2: [
    "putAnEndToTheConfusionAboutTheseConcepts2",
  ],
  group24: ["group24", "group34", "frame85", "screenShot20210417At34114"],
  group34: ["group34"],
  frame85: ["frame85", "screenShot20210417At34114"],
  screenShot20210417At34114: ["screenShot20210417At34114"],
  frame72: [
    "frame72",
    "frame25",
    "_0XhYnfCexInyx9VRq15",
    "putAnEndToTheConfusionAboutTheseConcepts3",
    "group25",
    "group35",
    "frame86",
    "screenShot20210417At34115",
  ],
  frame25: ["frame25", "_0XhYnfCexInyx9VRq15"],
  _0XhYnfCexInyx9VRq15: ["_0XhYnfCexInyx9VRq15"],
  putAnEndToTheConfusionAboutTheseConcepts3: [
    "putAnEndToTheConfusionAboutTheseConcepts3",
  ],
  group25: ["group25", "group35", "frame86", "screenShot20210417At34115"],
  group35: ["group35"],
  frame86: ["frame86", "screenShot20210417At34115"],
  screenShot20210417At34115: ["screenShot20210417At34115"],
  frame87: [
    "frame87",
    "frame26",
    "_0XhYnfCexInyx9VRq16",
    "putAnEndToTheConfusionAboutTheseConcepts4",
    "group26",
    "group36",
    "frame88",
    "screenShot20210417At34116",
  ],
  frame26: ["frame26", "_0XhYnfCexInyx9VRq16"],
  _0XhYnfCexInyx9VRq16: ["_0XhYnfCexInyx9VRq16"],
  putAnEndToTheConfusionAboutTheseConcepts4: [
    "putAnEndToTheConfusionAboutTheseConcepts4",
  ],
  group26: ["group26", "group36", "frame88", "screenShot20210417At34116"],
  group36: ["group36"],
  frame88: ["frame88", "screenShot20210417At34116"],
  screenShot20210417At34116: ["screenShot20210417At34116"],
  blogGrid3: [
    "blogGrid3",
    "frame63",
    "frame27",
    "_0XhYnfCexInyx9VRq17",
    "putAnEndToTheConfusionAboutTheseConcepts5",
    "group27",
    "group37",
    "frame89",
    "screenShot20210417At34117",
    "frame73",
    "frame28",
    "_0XhYnfCexInyx9VRq18",
    "putAnEndToTheConfusionAboutTheseConcepts6",
    "group28",
    "group38",
    "frame810",
    "screenShot20210417At34118",
    "frame811",
    "frame29",
    "_0XhYnfCexInyx9VRq19",
    "putAnEndToTheConfusionAboutTheseConcepts7",
    "group29",
    "group39",
    "frame812",
    "screenShot20210417At34119",
  ],
  frame63: [
    "frame63",
    "frame27",
    "_0XhYnfCexInyx9VRq17",
    "putAnEndToTheConfusionAboutTheseConcepts5",
    "group27",
    "group37",
    "frame89",
    "screenShot20210417At34117",
  ],
  frame27: ["frame27", "_0XhYnfCexInyx9VRq17"],
  _0XhYnfCexInyx9VRq17: ["_0XhYnfCexInyx9VRq17"],
  putAnEndToTheConfusionAboutTheseConcepts5: [
    "putAnEndToTheConfusionAboutTheseConcepts5",
  ],
  group27: ["group27", "group37", "frame89", "screenShot20210417At34117"],
  group37: ["group37"],
  frame89: ["frame89", "screenShot20210417At34117"],
  screenShot20210417At34117: ["screenShot20210417At34117"],
  frame73: [
    "frame73",
    "frame28",
    "_0XhYnfCexInyx9VRq18",
    "putAnEndToTheConfusionAboutTheseConcepts6",
    "group28",
    "group38",
    "frame810",
    "screenShot20210417At34118",
  ],
  frame28: ["frame28", "_0XhYnfCexInyx9VRq18"],
  _0XhYnfCexInyx9VRq18: ["_0XhYnfCexInyx9VRq18"],
  putAnEndToTheConfusionAboutTheseConcepts6: [
    "putAnEndToTheConfusionAboutTheseConcepts6",
  ],
  group28: ["group28", "group38", "frame810", "screenShot20210417At34118"],
  group38: ["group38"],
  frame810: ["frame810", "screenShot20210417At34118"],
  screenShot20210417At34118: ["screenShot20210417At34118"],
  frame811: [
    "frame811",
    "frame29",
    "_0XhYnfCexInyx9VRq19",
    "putAnEndToTheConfusionAboutTheseConcepts7",
    "group29",
    "group39",
    "frame812",
    "screenShot20210417At34119",
  ],
  frame29: ["frame29", "_0XhYnfCexInyx9VRq19"],
  _0XhYnfCexInyx9VRq19: ["_0XhYnfCexInyx9VRq19"],
  putAnEndToTheConfusionAboutTheseConcepts7: [
    "putAnEndToTheConfusionAboutTheseConcepts7",
  ],
  group29: ["group29", "group39", "frame812", "screenShot20210417At34119"],
  group39: ["group39"],
  frame812: ["frame812", "screenShot20210417At34119"],
  screenShot20210417At34119: ["screenShot20210417At34119"],
} as const
type NodeNameType = keyof typeof PlasmicDescendants
type DescendantsType<
  T extends NodeNameType
> = typeof PlasmicDescendants[T][number]
type NodeDefaultElementType = {
  root: "div"
  home: "div"
  header: "div"
  topBar: "div"
  logo: "a"
  logoImg: "svg"
  search: "div"
  svg: "svg"
  menu: "div"
  menuItem: "a"
  menuItem2: "a"
  menuItem222: "a"
  menuItem2222: "a"
  menuItem2222222: "a"
  menuItem22222222: "a"
  featurePost: "div"
  featurePostImg: "div"
  _1AiyudnGy73IyPrVNtugCRw1: "div"
  featurePostTitle: "div"
  blogGridWrap: "div"
  blogGrid: "div"
  frame6: "div"
  frame2: "div"
  _0XhYnfCexInyx9VRq1: "div"
  theDataEngineerSkillPyramid: "div"
  group2: "div"
  group3: "div"
  frame8: "div"
  screenShot20210417At3411: "div"
  frame7: "div"
  frame22: "div"
  _0XhYnfCexInyx9VRq12: "div"
  putAnEndToTheConfusionAboutTheseConcepts: "div"
  group22: "div"
  group32: "div"
  frame82: "div"
  screenShot20210417At34112: "div"
  frame83: "div"
  frame23: "div"
  _0XhYnfCexInyx9VRq13: "div"
  group23: "div"
  group33: "div"
  frame84: "div"
  screenShot20210417At34113: "div"
  blogGrid2: "div"
  frame62: "div"
  frame24: "div"
  _0XhYnfCexInyx9VRq14: "div"
  putAnEndToTheConfusionAboutTheseConcepts2: "div"
  group24: "div"
  group34: "div"
  frame85: "div"
  screenShot20210417At34114: "div"
  frame72: "div"
  frame25: "div"
  _0XhYnfCexInyx9VRq15: "div"
  putAnEndToTheConfusionAboutTheseConcepts3: "div"
  group25: "div"
  group35: "div"
  frame86: "div"
  screenShot20210417At34115: "div"
  frame87: "div"
  frame26: "div"
  _0XhYnfCexInyx9VRq16: "div"
  putAnEndToTheConfusionAboutTheseConcepts4: "div"
  group26: "div"
  group36: "div"
  frame88: "div"
  screenShot20210417At34116: "div"
  blogGrid3: "div"
  frame63: "div"
  frame27: "div"
  _0XhYnfCexInyx9VRq17: "div"
  putAnEndToTheConfusionAboutTheseConcepts5: "div"
  group27: "div"
  group37: "div"
  frame89: "div"
  screenShot20210417At34117: "div"
  frame73: "div"
  frame28: "div"
  _0XhYnfCexInyx9VRq18: "div"
  putAnEndToTheConfusionAboutTheseConcepts6: "div"
  group28: "div"
  group38: "div"
  frame810: "div"
  screenShot20210417At34118: "div"
  frame811: "div"
  frame29: "div"
  _0XhYnfCexInyx9VRq19: "div"
  putAnEndToTheConfusionAboutTheseConcepts7: "div"
  group29: "div"
  group39: "div"
  frame812: "div"
  screenShot20210417At34119: "div"
}

type ReservedPropsType = "variants" | "args" | "overrides"
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicHomepage__OverridesType,
  DescendantsType<T>
>
type NodeComponentProps<T extends NodeNameType> = { // Explicitly specify variants, args, and overrides as objects
  variants?: PlasmicHomepage__VariantsArgs
  args?: PlasmicHomepage__ArgsType
  overrides?: NodeOverridesType<T>
} & Omit<PlasmicHomepage__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
  // Specify args directly as props
  Omit<PlasmicHomepage__ArgsType, ReservedPropsType> &
  // Specify overrides for each element directly as props
  Omit<
    NodeOverridesType<T>,
    ReservedPropsType | VariantPropType | ArgPropType
  > &
  // Specify props for the root element
  Omit<
    Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
    ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
  >

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key }
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicHomepage__ArgProps,
      internalVariantPropNames: PlasmicHomepage__VariantProps,
    })

    return PlasmicHomepage__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName,
    })
  }
  if (nodeName === "root") {
    func.displayName = "PlasmicHomepage"
  } else {
    func.displayName = `PlasmicHomepage.${nodeName}`
  }
  return func
}

export const PlasmicHomepage = Object.assign(
  // Top-level PlasmicHomepage renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    home: makeNodeComponent("home"),
    header: makeNodeComponent("header"),
    topBar: makeNodeComponent("topBar"),
    logo: makeNodeComponent("logo"),
    logoImg: makeNodeComponent("logoImg"),
    search: makeNodeComponent("search"),
    svg: makeNodeComponent("svg"),
    menu: makeNodeComponent("menu"),
    menuItem: makeNodeComponent("menuItem"),
    menuItem2: makeNodeComponent("menuItem2"),
    menuItem222: makeNodeComponent("menuItem222"),
    menuItem2222: makeNodeComponent("menuItem2222"),
    menuItem2222222: makeNodeComponent("menuItem2222222"),
    menuItem22222222: makeNodeComponent("menuItem22222222"),
    featurePost: makeNodeComponent("featurePost"),
    featurePostImg: makeNodeComponent("featurePostImg"),
    _1AiyudnGy73IyPrVNtugCRw1: makeNodeComponent("_1AiyudnGy73IyPrVNtugCRw1"),
    featurePostTitle: makeNodeComponent("featurePostTitle"),
    blogGridWrap: makeNodeComponent("blogGridWrap"),
    blogGrid: makeNodeComponent("blogGrid"),
    frame6: makeNodeComponent("frame6"),
    frame2: makeNodeComponent("frame2"),
    _0XhYnfCexInyx9VRq1: makeNodeComponent("_0XhYnfCexInyx9VRq1"),
    theDataEngineerSkillPyramid: makeNodeComponent(
      "theDataEngineerSkillPyramid"
    ),
    group2: makeNodeComponent("group2"),
    group3: makeNodeComponent("group3"),
    frame8: makeNodeComponent("frame8"),
    screenShot20210417At3411: makeNodeComponent("screenShot20210417At3411"),
    frame7: makeNodeComponent("frame7"),
    frame22: makeNodeComponent("frame22"),
    _0XhYnfCexInyx9VRq12: makeNodeComponent("_0XhYnfCexInyx9VRq12"),
    putAnEndToTheConfusionAboutTheseConcepts: makeNodeComponent(
      "putAnEndToTheConfusionAboutTheseConcepts"
    ),
    group22: makeNodeComponent("group22"),
    group32: makeNodeComponent("group32"),
    frame82: makeNodeComponent("frame82"),
    screenShot20210417At34112: makeNodeComponent("screenShot20210417At34112"),
    frame83: makeNodeComponent("frame83"),
    frame23: makeNodeComponent("frame23"),
    _0XhYnfCexInyx9VRq13: makeNodeComponent("_0XhYnfCexInyx9VRq13"),
    group23: makeNodeComponent("group23"),
    group33: makeNodeComponent("group33"),
    frame84: makeNodeComponent("frame84"),
    screenShot20210417At34113: makeNodeComponent("screenShot20210417At34113"),
    blogGrid2: makeNodeComponent("blogGrid2"),
    frame62: makeNodeComponent("frame62"),
    frame24: makeNodeComponent("frame24"),
    _0XhYnfCexInyx9VRq14: makeNodeComponent("_0XhYnfCexInyx9VRq14"),
    putAnEndToTheConfusionAboutTheseConcepts2: makeNodeComponent(
      "putAnEndToTheConfusionAboutTheseConcepts2"
    ),
    group24: makeNodeComponent("group24"),
    group34: makeNodeComponent("group34"),
    frame85: makeNodeComponent("frame85"),
    screenShot20210417At34114: makeNodeComponent("screenShot20210417At34114"),
    frame72: makeNodeComponent("frame72"),
    frame25: makeNodeComponent("frame25"),
    _0XhYnfCexInyx9VRq15: makeNodeComponent("_0XhYnfCexInyx9VRq15"),
    putAnEndToTheConfusionAboutTheseConcepts3: makeNodeComponent(
      "putAnEndToTheConfusionAboutTheseConcepts3"
    ),
    group25: makeNodeComponent("group25"),
    group35: makeNodeComponent("group35"),
    frame86: makeNodeComponent("frame86"),
    screenShot20210417At34115: makeNodeComponent("screenShot20210417At34115"),
    frame87: makeNodeComponent("frame87"),
    frame26: makeNodeComponent("frame26"),
    _0XhYnfCexInyx9VRq16: makeNodeComponent("_0XhYnfCexInyx9VRq16"),
    putAnEndToTheConfusionAboutTheseConcepts4: makeNodeComponent(
      "putAnEndToTheConfusionAboutTheseConcepts4"
    ),
    group26: makeNodeComponent("group26"),
    group36: makeNodeComponent("group36"),
    frame88: makeNodeComponent("frame88"),
    screenShot20210417At34116: makeNodeComponent("screenShot20210417At34116"),
    blogGrid3: makeNodeComponent("blogGrid3"),
    frame63: makeNodeComponent("frame63"),
    frame27: makeNodeComponent("frame27"),
    _0XhYnfCexInyx9VRq17: makeNodeComponent("_0XhYnfCexInyx9VRq17"),
    putAnEndToTheConfusionAboutTheseConcepts5: makeNodeComponent(
      "putAnEndToTheConfusionAboutTheseConcepts5"
    ),
    group27: makeNodeComponent("group27"),
    group37: makeNodeComponent("group37"),
    frame89: makeNodeComponent("frame89"),
    screenShot20210417At34117: makeNodeComponent("screenShot20210417At34117"),
    frame73: makeNodeComponent("frame73"),
    frame28: makeNodeComponent("frame28"),
    _0XhYnfCexInyx9VRq18: makeNodeComponent("_0XhYnfCexInyx9VRq18"),
    putAnEndToTheConfusionAboutTheseConcepts6: makeNodeComponent(
      "putAnEndToTheConfusionAboutTheseConcepts6"
    ),
    group28: makeNodeComponent("group28"),
    group38: makeNodeComponent("group38"),
    frame810: makeNodeComponent("frame810"),
    screenShot20210417At34118: makeNodeComponent("screenShot20210417At34118"),
    frame811: makeNodeComponent("frame811"),
    frame29: makeNodeComponent("frame29"),
    _0XhYnfCexInyx9VRq19: makeNodeComponent("_0XhYnfCexInyx9VRq19"),
    putAnEndToTheConfusionAboutTheseConcepts7: makeNodeComponent(
      "putAnEndToTheConfusionAboutTheseConcepts7"
    ),
    group29: makeNodeComponent("group29"),
    group39: makeNodeComponent("group39"),
    frame812: makeNodeComponent("frame812"),
    screenShot20210417At34119: makeNodeComponent("screenShot20210417At34119"),

    // Metadata about props expected for PlasmicHomepage
    internalVariantProps: PlasmicHomepage__VariantProps,
    internalArgProps: PlasmicHomepage__ArgProps,
  }
)

export default PlasmicHomepage
/* prettier-ignore-end */
